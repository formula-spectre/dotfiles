;; -*- mode: lisp -*- 

#-quicklisp
(let ((quicklisp-init (merge-pathnames ".local/share/quicklisp/setup.lisp"
                                       (user-homedir-pathname))))
  (when (probe-file quicklisp-init)
    (load quicklisp-init)))

(ql:quickload '(:slynk
                :alexandria
                ))

(let ((server-running nil))
  (defcommand slynk () ()
    "Toggle the swank server on/off"
    (if server-running
        (progn
          (slynk:stop-server 4005)
          (echo-string
           (current-screen)
           "Stopping swank.")
          (setf server-running nil))
        (progn
          (slynk:create-server :port 4005
                               :dont-close t)
          (echo-string
           (current-screen)
           "Starting swank. M-x sly-connect RET RET, then (in-package stumpwm).")
          (setf server-running t)))))

(defvar *background* "#000000")
(set-module-dir "/usr/share/common-lisp/source/stumpwm-contrib/")
(defvar *foreground* "#FFFFFF")

(defmacro mmap (map key command)
  "a macro to make binding easier"
  `(define-key ,map (kbd ,key) ,command))

(defmacro curry (map)
  `(alexandria:curry #'define-key ,map))

(load-module "pass")

(setf *mouse-focus-policy* :sloppy)

(defvar *emacs-application-keymap*
  (let ((m (make-sparse-keymap)))
    (dolist
        (emacs-map `(
                     (,(kbd "m") "emacs-magit")
                     (,(kbd "c") "emacs-calendar")
                     (,(kbd "C-s") "emacs-auto-slynk")))
      (apply (curry m) emacs-map))))

(defvar *my-application-keymap*
  (let ((m (make-sparse-keymap)))
    (mmap m "b" "exec ~/.local/bin/bw/brave")
    (mmap m "M-d" "exec ~/.local/bin/bw/deltachat")
    (mmap m "d" "exec ~/.local/bin/bw/abaddon")
    (mmap m "D" "exec ~/.local/bin/bw/discord")
    (mmap m "f" "exec firefox")
    (mmap m "M-l" "exec ~/.local/bin/bw/lycheeslicer")
    (mmap m "s" "exec flatpak run com.valvesoftware.Steam ")
    (mmap m "S" "exec ~/.local/bin/bw/steam")
    (mmap m "t" "exec emacsclient -e '(telega t)'")
    (mmap m "T" "exec emacsclient -e '(telega-kill t)'")
    (mmap m "w" "exec ~/.local/bin/bw/whatsdesk")
    (mmap m "l" "exec ~/.local/bin/bw/librewolf")
    (mmap m "o" "exec ~/.local/bin/bw/obsidian")
    m))

(set-prefix-key (kbd "s-x"))

(unless (which-key-mode)
  (which-key-mode))

(undefine-key *root-map* (kbd "o"))
(dolist
    (default-bindings `(
                        (,(kbd "M-n")) (,(kbd "M-p")) (,(kbd "x"))
                        (,(kbd "a"))   (,(kbd "C-a")) (,(kbd ">"))
                        (,(kbd "s"))   (,(kbd "S"))  (,(kbd "o"))
                        (,(kbd "TAB")) (,(kbd "\"")) (,(kbd "!"))
                        ))
  (apply (alexandria:curry #'undefine-key *root-map*) default-bindings))

(dolist
    (root-map `(
                (,(kbd "x")       ,*my-application-keymap*)
                (,(kbd "s-x")     "pull-hidden-next")
                (,(kbd "1")       "only")
                (,(kbd "2")       "vsplit")
                (,(kbd "3")       "hsplit")
                (,(kbd "0")       "remove-split")
                (,(kbd "s-b")     "windowlist")
                (,(kbd "s")       "slynk")
                (,(kbd "d")       "time")
                (,(kbd "e")       "exec emacsclient -c")
                (,(kbd "E")       "emacs")
                (,(kbd "C-e")     ,*emacs-application-keymap*)
                (,(kbd "X")       "exec killall xmobar tiramisu && xmobar")
                (,(kbd "s-h")     "move-window left")
                (,(kbd "s-j")     "move-window down")
                (,(kbd "s-k")     "move-window up")
                (,(kbd "s-l")     "move-window right")
                ))
  (apply (curry *root-map*) root-map))

  (dolist
      (top-bindings `(
  ;                    (,(kbd "s-RET")     "exec emacsclient -ce '(+vterm/here \"~/\")'")
                      (,(kbd "s-RET")     "exec termonad")
                      (,(kbd "s-h")       "move-focus left")
                      (,(kbd "s-j")       "move-focus down")
                      (,(kbd "s-k")       "move-focus up")
                      (,(kbd "s-l")       "move-focus right")
                      (,(kbd "s-p")       "exec")
                      (,(kbd "s-r")       "loadrc")
                      (,(kbd "s-:")       "eval")
                      (,(kbd "s-u")       "pass:pass-copy")))
      (apply (curry *top-map*) top-bindings))

(when *initializing*
  (run-shell-command "xmobar")
  (run-shell-command "sh ~/.fehbg"))
